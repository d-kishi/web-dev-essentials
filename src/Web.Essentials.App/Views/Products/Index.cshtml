@model Web.Essentials.App.ViewModels.ProductIndexViewModel
@{
    ViewData["Title"] = "商品一覧";
    // 検索フォーム用のViewBagデータ設定
    ViewBag.SearchKeyword = Model?.SearchKeyword ?? "";
    ViewBag.CategoryId = Model?.CategoryId;
    ViewBag.ShowCategoryFilter = true;
    ViewBag.Categories = Model?.Categories ?? new List<Web.Essentials.App.ViewModels.CategorySelectItem>();
}

<!-- 商品一覧画面 -->
<div class="page-header">
    <div class="page-title-section">
        <h1 class="page-title">商品一覧</h1>
        <p class="page-description">登録されている商品の一覧を表示します。検索やフィルタリングが可能です。</p>
    </div>
    <div class="page-actions">
        <a href="@Url.Action("Create", "Products")" class="btn btn-primary">
            <span class="btn-icon">➕</span>
            新規商品登録
        </a>
    </div>
</div>

<!-- 検索フォーム -->
@Html.Partial("_SearchForm")

<!-- 商品一覧コンテナ -->
<div class="product-list-container">
    <!-- ローディング表示 -->
    <div id="productListLoading" class="loading-container" style="display: none;">
        <div class="loading-spinner">
            <div class="spinner"></div>
            <p>商品を読み込み中...</p>
        </div>
    </div>
    
    <!-- 商品一覧テーブル -->
    <div id="productListContent" class="list-content">
        <div class="list-header">
            <div class="list-controls">
                <div class="view-options">
                    <button type="button" 
                            class="view-toggle active" 
                            data-view="table" 
                            onclick="switchView('table')"
                            title="テーブル表示">
                        📋
                    </button>
                    <button type="button" 
                            class="view-toggle" 
                            data-view="grid" 
                            onclick="switchView('grid')"
                            title="グリッド表示">
                        🔳
                    </button>
                </div>
                <div class="sort-options">
                    <label for="sortBy">並び順:</label>
                    <select id="sortBy" class="sort-select" onchange="changeSortOrder(this.value)">
                        <option value="updated_desc">更新日時（新しい順）</option>
                        <option value="updated_asc">更新日時（古い順）</option>
                        <option value="name_asc">商品名（昇順）</option>
                        <option value="name_desc">商品名（降順）</option>
                        <option value="price_asc">価格（安い順）</option>
                        <option value="price_desc">価格（高い順）</option>
                    </select>
                </div>
            </div>
        </div>
        
        <!-- テーブル表示 -->
        <div id="tableView" class="table-container">
            <table class="product-table">
                <thead>
                    <tr>
                        <th class="col-thumbnail">画像</th>
                        <th class="col-name sortable" onclick="sortBy('name')">
                            商品名
                            <span class="sort-indicator" data-column="name"></span>
                        </th>
                        <th class="col-category sortable" onclick="sortBy('category')">
                            カテゴリ
                            <span class="sort-indicator" data-column="category"></span>
                        </th>
                        <th class="col-price sortable" onclick="sortBy('price')">
                            価格
                            <span class="sort-indicator" data-column="price"></span>
                        </th>
                        <th class="col-jan">JANコード</th>
                        <th class="col-updated sortable" onclick="sortBy('updated')">
                            更新日時
                            <span class="sort-indicator" data-column="updated"></span>
                        </th>
                        <th class="col-actions">操作</th>
                    </tr>
                </thead>
                <tbody id="productTableBody">
                    @if (Model?.Products?.Any() == true)
                    {
                        @foreach (var product in Model.Products)
                        {
                            <tr class="product-row" data-product-id="@product.Id">
                                <td class="col-thumbnail">
                                    <div class="thumbnail-container">
                                        <img src="/images/no-image.png" alt="商品画像" class="product-thumbnail" />
                                    </div>
                                </td>
                                <td class="col-name">
                                    <div class="product-name">
                                        <a href="@Url.Action("Details", "Products", new { id = product.Id })" class="product-link">
                                            @product.Name
                                        </a>
                                    </div>
                                    @if (!string.IsNullOrEmpty(product.Description))
                                    {
                                        <div class="product-description">
                                            @(product.Description.Length > 50 ? product.Description.Substring(0, 50) + "..." : product.Description)
                                        </div>
                                    }
                                </td>
                                <td class="col-category">
                                    <span class="category-badge">@product.CategoryName</span>
                                </td>
                                <td class="col-price">
                                    <span class="price-value">¥@product.Price.ToString("N0")</span>
                                </td>
                                <td class="col-jan">
                                    @if (!string.IsNullOrEmpty(product.JanCode))
                                    {
                                        <code class="jan-code">@product.JanCode</code>
                                    }
                                    else
                                    {
                                        <span class="no-data">-</span>
                                    }
                                </td>
                                <td class="col-updated">
                                    <time class="updated-time" datetime="@product.UpdatedAt.ToString("yyyy-MM-dd")">
                                        @product.UpdatedAt.ToString("yyyy/MM/dd")
                                    </time>
                                </td>
                                <td class="col-actions">
                                    <div class="action-buttons">
                                        <a href="@Url.Action("Details", "Products", new { id = product.Id })" 
                                           class="btn btn-info btn-sm" 
                                           title="詳細表示">
                                            詳細
                                        </a>
                                        <a href="@Url.Action("Edit", "Products", new { id = product.Id })" 
                                           class="btn btn-warning btn-sm" 
                                           title="編集">
                                            編集
                                        </a>
                                        <button type="button" 
                                                class="btn btn-danger btn-sm" 
                                                onclick="confirmDeleteProduct(@product.Id, '@product.Name')"
                                                title="削除">
                                            削除
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr class="no-data-row">
                            <td colspan="7" class="no-data-cell">
                                <div class="no-data-message">
                                    <div class="no-data-icon">📦</div>
                                    <h3>商品が見つかりません</h3>
                                    <p>検索条件を変更するか、新しい商品を登録してください。</p>
                                    <a href="@Url.Action("Create", "Products")" class="btn btn-primary">
                                        商品を登録する
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
        <!-- グリッド表示 -->
        <div id="gridView" class="grid-container" style="display: none;">
            <div id="productGrid" class="product-grid">
                <!-- Ajax でデータを読み込む -->
            </div>
        </div>
    </div>
    
    <!-- ページング -->
    <div id="paginationContainer" class="pagination-wrapper">
        @if (Model?.Paging != null)
        {
            @Html.Partial("_Pagination", Model.Paging)
        }
    </div>
</div>

@section Scripts {
    <script src="~/js/products-index.js" asp-append-version="true" defer></script>
    <script defer>
        // サーバーサイドデータを JavaScriptに渡す
        document.addEventListener('DOMContentLoaded', function() {
            setInitialSearchParams({
                searchKeyword: '@Model?.SearchKeyword',
                categoryId: @(Model?.CategoryId?.ToString() ?? "null"),
                page: @(Model?.CurrentPage ?? 1),
                pageSize: @(Model?.PageSize ?? 10),
                sortBy: 'updated_desc'
            });
        });
    </script>
}