@model Web.Essentials.App.ViewModels.Interfaces.IProductFormViewModel

<!-- 商品フォーム部分ビュー -->
<!-- Create/Edit画面で共通利用する商品入力フォーム -->
<div class="product-form-container">
    <!-- 基本情報セクション -->
    <div class="form-section">
        <h3 class="section-title">基本情報</h3>
        <div class="form-column">
            <!-- 商品名 -->
            <div class="form-group">
                <label asp-for="Name" class="form-label required">商品名</label>
                <input asp-for="Name" 
                       class="form-input" 
                       placeholder="商品名を入力してください"
                       maxlength="100"
                       autocomplete="off" />
                <span asp-validation-for="Name" class="validation-error"></span>
                <div class="field-help">
                    <small>最大100文字まで入力可能です</small>
                </div>
            </div>
            
            <!-- 価格 -->
            <div class="form-group">
                <label asp-for="Price" class="form-label required">価格</label>
                <div class="price-input-group">
                    <span class="price-currency">¥</span>
                    <input asp-for="Price" 
                           class="form-input price-input" 
                           type="number"
                           min="0"
                           max="9999999"
                           step="1"
                           placeholder="0"
                           />
                </div>
                <span asp-validation-for="Price" class="validation-error"></span>
                <div class="field-help">
                    <small>税込価格を入力してください（円）</small>
                </div>
            </div>
            
            <!-- カテゴリ（最下位のみ表示、階層ラベル） -->
            <div class="form-group">
                <label asp-for="SelectedCategoryIds" class="form-label required">カテゴリ</label>
                <div class="category-checkbox-list">
                    @if (Model?.Categories != null)
                    {
                        @foreach (var category in Model.Categories)
                        {
                            var isSelected = Model.SelectedCategoryIds?.Contains(category.Id) == true;
                            <div class="category-checkbox-item">
                                <input type="checkbox" 
                                       id="category_@category.Id" 
                                       name="SelectedCategoryIds" 
                                       value="@category.Id" 
                                       @(isSelected ? "checked" : "")
                                       class="category-checkbox" />
                                <label for="category_@category.Id" class="category-checkbox-label">
                                    <span class="category-path">@category.FullPath</span>
                                </label>
                            </div>
                        }
                    }
                </div>
                <span asp-validation-for="SelectedCategoryIds" class="validation-error"></span>
                <div class="field-help">
                    <small>最下位のカテゴリのみ表示されています（複数選択可）</small>
                </div>
            </div>
            
            <!-- 商品ステータス -->
            <div class="form-group">
                <label asp-for="Status" class="form-label required">商品ステータス</label>
                <select asp-for="Status" asp-items="Model?.StatusSelectItems" class="form-select">
                </select>
                <span asp-validation-for="Status" class="validation-error"></span>
                <div class="field-help">
                    <small>商品の販売状況を選択してください</small>
                </div>
            </div>
            
            <!-- JANコード -->
            <div class="form-group">
                <label asp-for="JanCode" class="form-label">JANコード</label>
                <input asp-for="JanCode" 
                       class="form-input" 
                       placeholder="JANコードを入力してください（任意）"
                       maxlength="13"
                       pattern="[0-9]{8,13}"
                       autocomplete="off"
                       />
                <span asp-validation-for="JanCode" class="validation-error"></span>
                <div id="janCodeValidation" class="field-validation" style="display: none;"></div>
                <div class="field-help">
                    <small>8〜13桁の数字で入力してください（任意）</small>
                </div>
            </div>
        </div>
    </div>
    
    <!-- 商品説明セクション -->
    <div class="form-section">
        <h3 class="section-title">商品説明</h3>
        <div class="form-group">
            <label asp-for="Description" class="form-label">商品説明</label>
            <textarea asp-for="Description" 
                      class="form-textarea" 
                      rows="5"
                      placeholder="商品の詳細説明を入力してください（任意）"
                      maxlength="1000"
                      ></textarea>
            <span asp-validation-for="Description" class="validation-error"></span>
            <div class="character-count">
                <span id="descriptionCount">0</span> / 1000文字
            </div>
            <div class="field-help">
                <small>商品の特徴、使用方法、注意事項などを記載してください</small>
            </div>
        </div>
    </div>
    
    <!-- 商品画像セクション -->
    <div class="form-section">
        <h3 class="section-title">商品画像</h3>
        <div class="form-group">
            <label for="imageFiles" class="form-label">画像ファイル</label>
            
            <!-- ファイル選択エリア -->
            <div class="image-upload-zone" id="imageUploadZone">
                <div class="upload-content">
                    <div class="upload-icon">📷</div>
                    <h4 class="upload-title">画像をアップロード</h4>
                    <p class="upload-description">
                        ファイルをドラッグ&ドロップするか、クリックして選択してください
                    </p>
                    <button type="button" class="btn btn-outline" data-action="select-file">
                        ファイルを選択
                    </button>
                    <input type="file" 
                           id="imageFiles" 
                           name="ImageFiles" 
                           accept="image/jpeg,image/png,image/gif" 
                           multiple 
                           style="display: none;"
                           />
                </div>
                <div class="upload-constraints">
                    <small>
                        • 対応形式: JPEG, PNG, GIF<br>
                        • 最大ファイルサイズ: 5MB<br>
                        • 最大5枚まで登録可能
                    </small>
                </div>
            </div>
            
            <!-- 画像プレビューエリア -->
            <div id="imagePreviewArea" class="image-preview-area" style="display: none;">
                <h4 class="preview-title">選択された画像</h4>
                <div id="imagePreviewContainer" class="image-preview-container">
                    <!-- 画像プレビューがここに表示される -->
                </div>
                <div class="preview-actions">
                    <button type="button" class="btn btn-outline btn-sm" data-action="clear-all">
                        すべてクリア
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- バリデーション結果表示エリア -->
    <div id="formValidationSummary" class="form-validation-summary" style="display: none;">
        <h4 class="validation-title">入力エラー</h4>
        <ul id="validationErrorList" class="validation-error-list">
            <!-- バリデーションエラーがここに表示される -->
        </ul>
    </div>
</div>

<!-- 既存画像表示用（編集時のみ） -->
@{
    var hasExistingImages = false;
    IEnumerable<Web.Essentials.App.ViewModels.ProductImageViewModel>? existingImages = null;
    try 
    {
        var existingImagesProperty = Model?.GetType().GetProperty("ExistingImages");
        var existingImagesValue = existingImagesProperty?.GetValue(Model);
        if (existingImagesValue is IEnumerable<Web.Essentials.App.ViewModels.ProductImageViewModel> images)
        {
            existingImages = images;
            hasExistingImages = existingImages.Any();
        }
    }
    catch
    {
        hasExistingImages = false;
    }
}
@if (hasExistingImages && existingImages != null)
{
    <div class="form-section">
        <h3 class="section-title">現在の商品画像</h3>
        <div class="existing-images-area">
            @foreach (var image in existingImages.OrderBy(img => img.DisplayOrder))
            {
                <div class="existing-image-item" data-image-id="@image.Id">
                    <div class="image-container">
                        <img src="@image.ImagePath" alt="商品画像" class="existing-image" />
                        <div class="image-overlay">
                            <button type="button" 
                                    class="btn btn-danger btn-sm delete-image-btn" 
                                    data-image-id="@image.Id"
                                    title="この画像を削除">
                                削除
                            </button>
                        </div>
                    </div>
                    <div class="image-info">
                        <small>表示順: @image.DisplayOrder</small>
                    </div>
                </div>
            }
        </div>
    </div>
}

<!-- 画像編集モーダル -->
<div id="imageEditModal" class="modal-overlay image-edit-modal" style="display: none;">
    <div class="modal-dialog modal-medium">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">画像編集</h3>
                <button type="button" class="modal-close" data-action="close-modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="image-edit-container">
                    <div class="image-edit-preview">
                        <img id="editPreviewImage" src="" alt="編集対象画像" class="edit-preview-img" />
                    </div>
                    <div class="image-edit-form">
                        <div class="form-group">
                            <label for="imageAltText" class="form-label">代替テキスト</label>
                            <input type="text" 
                                   id="imageAltText" 
                                   class="form-input" 
                                   placeholder="画像の説明を入力してください"
                                   maxlength="200" />
                            <div class="field-help">
                                <small>アクセシビリティ向上のため、画像の内容を説明してください（最大200文字）</small>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <div class="checkbox-group">
                                <label class="checkbox-label">
                                    <input type="checkbox" id="imageIsMain" class="checkbox-input">
                                    <span class="checkbox-custom"></span>
                                    メイン画像として設定
                                </label>
                            </div>
                            <div class="field-help">
                                <small>商品一覧や詳細画面で最初に表示される画像です</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-action="close-modal">
                    キャンセル
                </button>
                <button type="button" class="btn btn-primary" data-action="save-settings">
                    設定を保存
                </button>
            </div>
        </div>
    </div>
</div>