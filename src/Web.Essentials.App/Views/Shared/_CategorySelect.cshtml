@model IEnumerable<Web.Essentials.App.ViewModels.CategorySelectItem>
@using Web.Essentials.App.Extensions
<!-- 階層カテゴリ選択部分ビュー -->
<!-- 階層構造対応のカテゴリ選択UI -->
<!-- 商品Create/Edit画面で共通利用 -->

@{
    var categories = Model ?? new List<Web.Essentials.App.ViewModels.CategorySelectItem>();
    var selectedCategoryId = ViewBag.SelectedCategoryId as int?;
    var fieldName = ViewBag.FieldName as string ?? "CategoryId";
    var isRequired = ViewBag.IsRequired as bool? ?? true;
    var allowMultiple = ViewBag.AllowMultiple as bool? ?? false;
    var showSearch = ViewBag.ShowSearch as bool? ?? true;
}

<div class="category-select-container">
    <div class="category-select-header">
        <label for="@fieldName" class="form-label @(isRequired ? "required" : "")">
            @(ViewBag.Label ?? "カテゴリ")
        </label>
        @if (showSearch)
        {
            <div class="category-search">
                <input type="text" 
                       id="categorySearchInput" 
                       class="category-search-input" 
                       placeholder="カテゴリを検索..."
                       />
                <span class="search-icon">🔍</span>
            </div>
        }
    </div>
    
    <!-- カテゴリ選択方式切り替え -->
    <div class="category-select-modes">
        <div class="mode-tabs">
            <button type="button" 
                    class="mode-tab active" 
                    data-mode="select">
                選択リスト
            </button>
            <button type="button" 
                    class="mode-tab" 
                    data-mode="tree">
                階層ツリー
            </button>
            @if (allowMultiple)
            {
                <button type="button" 
                        class="mode-tab" 
                        data-mode="checkbox">
                    複数選択
                </button>
            }
        </div>
    </div>
    
    <!-- 選択リストモード -->
    <div id="selectMode" class="category-mode select-mode active">
        @if (allowMultiple)
        {
            @if (isRequired)
            {
                <select name="@fieldName" 
                        id="@fieldName" 
                        class="form-select category-select"
                        asp-items="@(new SelectList(categories.OrderBy(c => c.Level).ThenBy(c => c.Name).Select(c => new { Value = c.Id, Text = $"{new string('　', c.Level * 2)}{c.Name}", Level = c.Level, FullPath = c.FullPath }), "Value", "Text", selectedCategoryId))"
                        required
                        multiple
                        data-category-select="true">
                </select>
            }
            else
            {
                <select name="@fieldName" 
                        id="@fieldName" 
                        class="form-select category-select"
                        asp-items="@(new SelectList(categories.OrderBy(c => c.Level).ThenBy(c => c.Name).Select(c => new { Value = c.Id, Text = $"{new string('　', c.Level * 2)}{c.Name}", Level = c.Level, FullPath = c.FullPath }), "Value", "Text", selectedCategoryId))"
                        multiple
                        data-category-select="true">
                </select>
            }
        }
        else
        {
            @if (isRequired)
            {
                <select name="@fieldName" 
                        id="@fieldName" 
                        class="form-select category-select"
                        asp-items="@(new SelectList(categories.OrderBy(c => c.Level).ThenBy(c => c.Name).Select(c => new { Value = c.Id, Text = $"{new string('　', c.Level * 2)}{c.Name}", Level = c.Level, FullPath = c.FullPath }), "Value", "Text", selectedCategoryId))"
                        required
                        data-category-select="true">
                    @if (!allowMultiple)
                    {
                        <option value="">カテゴリを選択してください</option>
                    }
                </select>
            }
            else
            {
                <select name="@fieldName" 
                        id="@fieldName" 
                        class="form-select category-select"
                        asp-items="@(new SelectList(categories.OrderBy(c => c.Level).ThenBy(c => c.Name).Select(c => new { Value = c.Id, Text = $"{new string('　', c.Level * 2)}{c.Name}", Level = c.Level, FullPath = c.FullPath }), "Value", "Text", selectedCategoryId))"
                        data-category-select="true">
                    @if (!allowMultiple)
                    {
                        <option value="">カテゴリを選択してください</option>
                    }
                </select>
            }
        }
        <div class="selected-category-info" id="selectedCategoryInfo" style="display: none;">
            <div class="info-label">選択中のカテゴリ:</div>
            <div class="info-path" id="selectedCategoryPath"></div>
        </div>
    </div>
    
    <!-- 階層ツリーモード -->
    <div id="treeMode" class="category-mode tree-mode">
        <div class="category-tree-container">
            <div id="categoryTree" class="category-tree">
                @if (categories.Any())
                {
                    <partial name="_CategoryHierarchy" model="categories.Where(c => c.Level == 0)" />
                }
                else
                {
                    <div class="no-categories">
                        <p>カテゴリが登録されていません</p>
                    </div>
                }
            </div>
        </div>
        <!-- 隠しフィールド（ツリーモード用） -->
        <input type="hidden" name="@fieldName" id="@(fieldName)_Tree" value="@selectedCategoryId" asp-for="@fieldName" />
    </div>
    
    <!-- 複数選択モード -->
    @if (allowMultiple)
    {
        <div id="checkboxMode" class="category-mode checkbox-mode">
            <div class="category-checkbox-container">
                @foreach (var category in categories.OrderBy(c => c.Level).ThenBy(c => c.Name))
                {
                    <div class="category-checkbox-item level-@category.Level" data-category-id="@category.Id">
                        <label class="checkbox-label" asp-for="@fieldName">
                            <input type="checkbox" 
                                   name="@fieldName" 
                                   value="@category.Id" 
                                   class="checkbox-input category-checkbox"
                                   data-level="@category.Level"
                                   data-full-path="@category.FullPath"
                                   data-category-checkbox="true" />
                            <span class="checkbox-custom"></span>
                            <span class="category-name">
                                @(new string('　', category.Level * 2))@category.Name
                            </span>
                            <span class="category-path">(@category.FullPath)</span>
                        </label>
                    </div>
                }
            </div>
            <div class="selected-categories-summary" id="selectedCategoriesSummary" style="display: none;">
                <div class="summary-label">選択中のカテゴリ:</div>
                <div class="summary-list" id="selectedCategoriesList"></div>
            </div>
        </div>
    }
    
    <!-- カテゴリ階層情報表示 -->
    <div class="category-hierarchy-info" id="categoryHierarchyInfo" style="display: none;">
        <div class="hierarchy-label">階層情報:</div>
        <div class="hierarchy-details">
            <div class="hierarchy-level">
                レベル: <span id="categoryLevel">-</span>
            </div>
            <div class="hierarchy-path">
                パス: <span id="categoryFullPath">-</span>
            </div>
        </div>
    </div>
    
    <!-- バリデーションエラー表示 -->
    <div id="categoryValidationError" class="validation-error" style="display: none;"></div>
    
    <!-- ヘルプテキスト -->
    <div class="category-help">
        <small>
            @if (allowMultiple)
            {
                <span>複数のカテゴリを選択できます。階層の深いカテゴリを選択することを推奨します。</span>
            }
            else
            {
                <span>商品に最も適したカテゴリを選択してください。階層の深いカテゴリを選択することを推奨します。</span>
            }
        </small>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/category-select.css" asp-append-version="true" />
}

@section Scripts {
    <script src="~/js/categories/category-select.js" asp-append-version="true" defer></script>
    <script>
        // カテゴリデータと設定をグローバル変数に設定
        window.categorySelectData = @Html.Raw(Json.Serialize(categories));
        window.categoryFieldName = '@fieldName';
        window.categoryFieldRequired = @Html.Raw(Json.Serialize(isRequired));
        @if (selectedCategoryId.HasValue)
        {
            <text>window.initialCategorySelection = @selectedCategoryId.Value;</text>
        }
    </script>
}