@model dynamic
<!-- ÂïÜÂìÅË©≥Á¥∞Ë°®Á§∫ÈÉ®ÂàÜ„Éì„É•„Éº -->
<!-- ÂïÜÂìÅÊÉÖÂ†±„ÅÆË™≠„ÅøÂèñ„ÇäÂ∞ÇÁî®Ë°®Á§∫ -->
<!-- Details/DeleteÁ¢∫Ë™çÁîªÈù¢„ÅßÂÖ±ÈÄöÂà©Áî® -->

@{
    var product = Model;
    var showActions = ViewBag.ShowActions as bool? ?? true;
    var isDeleteMode = ViewBag.IsDeleteMode as bool? ?? false;
    var showFullDetails = ViewBag.ShowFullDetails as bool? ?? true;
}

<div class="product-details-display">
    <!-- ÂïÜÂìÅÊ¶ÇË¶Å„Ç´„Éº„Éâ -->
    <div class="product-overview-card">
        <div class="product-overview-content">
            <!-- ÂïÜÂìÅÁîªÂÉè„Çª„ÇØ„Ç∑„Éß„É≥ -->
            <div class="product-images-section">
                @if (product.Images?.Any() == true)
                {
                    <div class="product-images-gallery">
                        @{
                            var mainImage = product.Images.FirstOrDefault(img => img.IsMain) ?? product.Images.First();
                        }
                        <!-- „É°„Ç§„É≥ÁîªÂÉè -->
                        <div class="main-image-container">
                            <img src="@mainImage.ImagePath" 
                                 alt="@mainImage.AltText" 
                                 class="main-product-image" 
                                 onclick="openImageViewer('@mainImage.ImagePath', '@mainImage.AltText')" />
                            <div class="image-overlay">
                                <span class="zoom-hint">„ÇØ„É™„ÉÉ„ÇØ„ÅßÊã°Â§ß</span>
                            </div>
                        </div>
                        
                        <!-- „Çµ„É†„Éç„Ç§„É´ÁîªÂÉè -->
                        @if (product.Images.Count > 1)
                        {
                            <div class="thumbnail-images">
                                @foreach (var image in product.Images.OrderBy(img => img.DisplayOrder))
                                {
                                    <div class="thumbnail-item @(image.IsMain ? "main" : "")"
                                         onclick="switchMainImage('@image.ImagePath', '@image.AltText', this)">
                                        <img src="@image.ImagePath" 
                                             alt="@image.AltText" 
                                             class="thumbnail-image" />
                                        @if (image.IsMain)
                                        {
                                            <div class="main-indicator">„É°„Ç§„É≥</div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="no-image-display">
                        <img src="/images/no-image.png" alt="ÁîªÂÉè„Å™„Åó" class="no-image-placeholder" />
                        <p class="no-image-text">ÁîªÂÉè„ÅåÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì</p>
                    </div>
                }
            </div>
            
            <!-- ÂïÜÂìÅÂü∫Êú¨ÊÉÖÂ†±„Çª„ÇØ„Ç∑„Éß„É≥ -->
            <div class="product-basic-section">
                <!-- ÂïÜÂìÅÂêç„Å®„Çπ„ÉÜ„Éº„Çø„Çπ -->
                <div class="product-header-info">
                    <h2 class="product-display-name">@product.Name</h2>
                    <div class="product-status-info">
                        @switch (product.Status)
                        {
                            case 0:
                                <span class="status-badge status-pending">Ë≤©Â£≤ÈñãÂßãÂâç</span>
                                break;
                            case 1:
                                <span class="status-badge status-active">Ë≤©Â£≤‰∏≠</span>
                                break;
                            case 2:
                                <span class="status-badge status-discontinued">ÂèñÊâ±ÁµÇ‰∫Ü</span>
                                break;
                        }
                    </div>
                </div>
                
                <!-- ‰æ°Ê†ºË°®Á§∫ -->
                <div class="product-price-info">
                    <div class="price-display">
                        <span class="price-currency">¬•</span>
                        <span class="price-amount">@product.Price.ToString("N0")</span>
                        <span class="price-note">ÔºàÁ®éËæºÔºâ</span>
                    </div>
                </div>
                
                <!-- ÂïÜÂìÅË™¨Êòé -->
                @if (!string.IsNullOrEmpty(product.Description))
                {
                    <div class="product-description-section">
                        <h3 class="description-title">ÂïÜÂìÅË™¨Êòé</h3>
                        <div class="description-content">
                            @Html.Raw(product.Description.Replace("\n", "<br />"))
                        </div>
                    </div>
                }
                
                <!-- „Ç´„ÉÜ„Ç¥„É™ÊÉÖÂ†± -->
                @if (product.Categories?.Any() == true)
                {
                    <div class="product-categories-section">
                        <h3 class="categories-title">„Ç´„ÉÜ„Ç¥„É™</h3>
                        <div class="categories-display">
                            @foreach (var category in product.Categories)
                            {
                                <div class="category-tag">
                                    <span class="category-icon">üè∑Ô∏è</span>
                                    <span class="category-path">@category.FullPath</span>
                                    @if (showActions && !isDeleteMode)
                                    {
                                        <a href="@Url.Action("Details", "Categories", new { id = category.Id })" 
                                           class="category-link"
                                           title="„Ç´„ÉÜ„Ç¥„É™Ë©≥Á¥∞„ÇíË°®Á§∫">
                                            ‚Üí
                                        </a>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
        
        <!-- „Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ÔºàË°®Á§∫„É¢„Éº„Éâ„Å´Âøú„Åò„Å¶Ôºâ -->
        @if (showActions && !isDeleteMode)
        {
            <div class="product-actions-section">
                <div class="action-buttons">
                    <a href="@Url.Action("Edit", "Products", new { id = product.Id })" 
                       class="btn btn-primary">
                        <span class="btn-icon">‚úèÔ∏è</span>
                        Á∑®ÈõÜ
                    </a>
                    <button type="button" 
                            class="btn btn-outline" 
                            onclick="shareProduct(@product.Id, '@product.Name')">
                        <span class="btn-icon">üì§</span>
                        ÂÖ±Êúâ
                    </button>
                    <button type="button" 
                            class="btn btn-light" 
                            onclick="duplicateProduct(@product.Id)">
                        <span class="btn-icon">üìã</span>
                        Ë§áË£Ω
                    </button>
                </div>
            </div>
        }
    </div>
    
    <!-- Ë©≥Á¥∞ÊÉÖÂ†±Ôºà„Éï„É´Ë°®Á§∫„É¢„Éº„Éâ„ÅÆÂ†¥ÂêàÔºâ -->
    @if (showFullDetails)
    {
        <div class="product-detailed-info">
            <!-- ÂïÜÂìÅ‰ªïÊßòÊÉÖÂ†± -->
            <div class="specifications-section">
                <h3 class="section-title">ÂïÜÂìÅ‰ªïÊßò</h3>
                <div class="specifications-grid">
                    <div class="spec-row">
                        <div class="spec-label">ÂïÜÂìÅID</div>
                        <div class="spec-value">@product.Id</div>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(product.JanCode))
                    {
                        <div class="spec-row">
                            <div class="spec-label">JAN„Ç≥„Éº„Éâ</div>
                            <div class="spec-value">
                                <code class="jan-code-display">@product.JanCode</code>
                                @if (showActions)
                                {
                                    <button type="button" 
                                            class="copy-button" 
                                            onclick="copyToClipboard('@product.JanCode')"
                                            title="„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº">
                                        üìã
                                    </button>
                                }
                            </div>
                        </div>
                    }
                    
                    <div class="spec-row">
                        <div class="spec-label">ÂïÜÂìÅ„Çπ„ÉÜ„Éº„Çø„Çπ</div>
                        <div class="spec-value">
                            @switch (product.Status)
                            {
                                case 0:
                                    <span class="status-text">Ë≤©Â£≤ÈñãÂßãÂâç</span>
                                    break;
                                case 1:
                                    <span class="status-text">Ë≤©Â£≤‰∏≠</span>
                                    break;
                                case 2:
                                    <span class="status-text">ÂèñÊâ±ÁµÇ‰∫Ü</span>
                                    break;
                            }
                        </div>
                    </div>
                    
                    @if (product.Images?.Any() == true)
                    {
                        <div class="spec-row">
                            <div class="spec-label">ÁôªÈå≤ÁîªÂÉèÊï∞</div>
                            <div class="spec-value">@product.Images.Count Êûö</div>
                        </div>
                    }
                    
                    @if (product.Categories?.Any() == true)
                    {
                        <div class="spec-row">
                            <div class="spec-label">Èñ¢ÈÄ£„Ç´„ÉÜ„Ç¥„É™Êï∞</div>
                            <div class="spec-value">@product.Categories.Count ÂÄã</div>
                        </div>
                    }
                </div>
            </div>
            
            <!-- ÁÆ°ÁêÜÊÉÖÂ†± -->
            <div class="management-info-section">
                <h3 class="section-title">ÁÆ°ÁêÜÊÉÖÂ†±</h3>
                <div class="management-grid">
                    <div class="management-row">
                        <div class="management-label">‰ΩúÊàêÊó•ÊôÇ</div>
                        <div class="management-value">
                            <time datetime="@product.CreatedAt.ToString("yyyy-MM-ddTHH:mm:ss")">
                                @product.CreatedAt.ToString("yyyyÂπ¥MMÊúàddÊó• HH:mm:ss")
                            </time>
                        </div>
                    </div>
                    
                    <div class="management-row">
                        <div class="management-label">ÊúÄÁµÇÊõ¥Êñ∞Êó•ÊôÇ</div>
                        <div class="management-value">
                            <time datetime="@product.UpdatedAt.ToString("yyyy-MM-ddTHH:mm:ss")">
                                @product.UpdatedAt.ToString("yyyyÂπ¥MMÊúàddÊó• HH:mm:ss")
                            </time>
                        </div>
                    </div>
                    
                    @if (product.CreatedAt != product.UpdatedAt)
                    {
                        <div class="management-row">
                            <div class="management-label">ÊúÄÁµÇÊõ¥Êñ∞„Åã„Çâ„ÅÆÁµåÈÅéÊôÇÈñì</div>
                            <div class="management-value">
                                @{
                                    var timeDiff = DateTime.Now - product.UpdatedAt;
                                    var timeDiffText = timeDiff.Days > 0 ? $"{timeDiff.Days}Êó•Ââç" :
                                                      timeDiff.Hours > 0 ? $"{timeDiff.Hours}ÊôÇÈñìÂâç" :
                                                      timeDiff.Minutes > 0 ? $"{timeDiff.Minutes}ÂàÜÂâç" : "1ÂàÜ‰ª•ÂÜÖ";
                                }
                                <span class="time-diff">@timeDiffText</span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

<!-- ÁîªÂÉè„Éì„É•„Éº„Ç¢„Éº„É¢„Éº„ÉÄ„É´ -->
<div id="imageViewerModal" class="modal-overlay image-viewer-modal" style="display: none;" onclick="closeImageViewer()">
    <div class="modal-dialog modal-large">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="imageViewerTitle">ÂïÜÂìÅÁîªÂÉè</h3>
                <button type="button" class="modal-close" onclick="closeImageViewer()">
                    <span>√ó</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="image-viewer-container">
                    <img id="viewerImage" src="" alt="" class="viewer-image" />
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // ÂïÜÂìÅË©≥Á¥∞Ë°®Á§∫„ÅÆÂàùÊúüÂåñ
    function initializeProductDetails() {
        setupImageInteractions();
    }
    
    // ÁîªÂÉè„Ç§„É≥„Çø„É©„ÇØ„Ç∑„Éß„É≥„ÅÆË®≠ÂÆö
    function setupImageInteractions() {
        // ÁîªÂÉè„Éõ„Éê„Éº„Ç®„Éï„Çß„ÇØ„Éà„Å™„Å©„ÅÆË®≠ÂÆö
    }
    
    // „É°„Ç§„É≥ÁîªÂÉèÂàá„ÇäÊõø„Åà
    function switchMainImage(imagePath, altText, thumbnailElement) {
        const mainImage = document.querySelector('.main-product-image');
        if (mainImage) {
            mainImage.src = imagePath;
            mainImage.alt = altText;
        }
        
        // „Çµ„É†„Éç„Ç§„É´„ÅÆ„Ç¢„ÇØ„ÉÜ„Ç£„ÉñÁä∂ÊÖã„ÇíÊõ¥Êñ∞
        document.querySelectorAll('.thumbnail-item').forEach(item => {
            item.classList.remove('active');
        });
        thumbnailElement.classList.add('active');
    }
    
    // ÁîªÂÉè„Éì„É•„Éº„Ç¢„Éº„ÇíÈñã„Åè
    function openImageViewer(imagePath, altText) {
        const modal = document.getElementById('imageViewerModal');
        const viewerImage = document.getElementById('viewerImage');
        const viewerTitle = document.getElementById('imageViewerTitle');
        
        viewerImage.src = imagePath;
        viewerImage.alt = altText;
        viewerTitle.textContent = altText || 'ÂïÜÂìÅÁîªÂÉè';
        
        modal.style.display = 'block';
        document.body.style.overflow = 'hidden';
    }
    
    // ÁîªÂÉè„Éì„É•„Éº„Ç¢„Éº„ÇíÈñâ„Åò„Çã
    function closeImageViewer() {
        const modal = document.getElementById('imageViewerModal');
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    }
    
    // ÂïÜÂìÅÂÖ±Êúâ
    function shareProduct(productId, productName) {
        const url = window.location.origin + '/Products/Details/' + productId;
        const shareText = `ÂïÜÂìÅ„Äå${productName}„Äç„Çí„ÅîË¶ß„Åè„Å†„Åï„ÅÑ`;
        
        if (navigator.share) {
            // „Éç„Ç§„ÉÜ„Ç£„ÉñÂÖ±ÊúâAPI‰ΩøÁî®
            navigator.share({
                title: productName,
                text: shareText,
                url: url
            }).catch(error => {
                console.log('ÂÖ±Êúâ„Åå„Ç≠„É£„É≥„Çª„É´„Åï„Çå„Åæ„Åó„Åü:', error);
            });
        } else {
            // „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ: „ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº
            copyToClipboard(url);
            showSuccess('ÂïÜÂìÅURL„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åü');
        }
    }
    
    // ÂïÜÂìÅË§áË£Ω
    function duplicateProduct(productId) {
        if (confirm('„Åì„ÅÆÂïÜÂìÅ„ÇíË§áË£Ω„Åó„Å¶Êñ∞„Åó„ÅÑÂïÜÂìÅ„Çí‰ΩúÊàê„Åó„Åæ„Åô„ÅãÔºü')) {
            // Ë§áË£ΩÂá¶ÁêÜ„ÅÆÂÆüË£Ö
            window.location.href = `/Products/Create?duplicateFrom=${productId}`;
        }
    }
    
    // „ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº
    async function copyToClipboard(text) {
        try {
            await navigator.clipboard.writeText(text);
            showSuccess('„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åü');
        } catch (error) {
            console.error('„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Ç≥„Éî„Éº„Ç®„É©„Éº:', error);
            
            // „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ
            const textArea = document.createElement('textarea');
            textArea.value = text;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
            
            showSuccess('„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åü');
        }
    }
    
    // ÂàùÊúüÂåñÔºà„Éö„Éº„Ç∏Ë™≠„ÅøËæº„ÅøÊôÇ„Å´Âëº„Å≥Âá∫„ÅóÔºâ
    document.addEventListener('DOMContentLoaded', function() {
        initializeProductDetails();
    });
    
    // ESC„Ç≠„Éº„ÅßÁîªÂÉè„Éì„É•„Éº„Ç¢„Éº„ÇíÈñâ„Åò„Çã
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            closeImageViewer();
        }
    });
</script>

<style>
    /* ÂïÜÂìÅË©≥Á¥∞Ë°®Á§∫„ÅÆ„Çπ„Çø„Ç§„É´ */
    .product-details-display {
        max-width: 100%;
    }
    
    .product-overview-card {
        background: white;
        border-radius: 8px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    
    .product-overview-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
        align-items: start;
    }
    
    @media (max-width: 768px) {
        .product-overview-content {
            grid-template-columns: 1fr;
        }
    }
    
    /* ÁîªÂÉè„Çª„ÇØ„Ç∑„Éß„É≥ */
    .product-images-section {
        position: relative;
    }
    
    .main-image-container {
        position: relative;
        margin-bottom: 1rem;
        border-radius: 8px;
        overflow: hidden;
        cursor: pointer;
    }
    
    .main-product-image {
        width: 100%;
        height: 300px;
        object-fit: cover;
        transition: transform 0.3s ease;
    }
    
    .main-image-container:hover .main-product-image {
        transform: scale(1.05);
    }
    
    .image-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(transparent, rgba(0,0,0,0.7));
        color: white;
        padding: 1rem;
        text-align: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    .main-image-container:hover .image-overlay {
        opacity: 1;
    }
    
    .zoom-hint {
        font-size: 0.9rem;
        font-weight: 500;
    }
    
    .thumbnail-images {
        display: flex;
        gap: 0.5rem;
        overflow-x: auto;
        padding: 0.5rem 0;
    }
    
    .thumbnail-item {
        position: relative;
        flex-shrink: 0;
        width: 80px;
        height: 80px;
        border-radius: 4px;
        overflow: hidden;
        cursor: pointer;
        border: 2px solid transparent;
        transition: all 0.3s ease;
    }
    
    .thumbnail-item:hover,
    .thumbnail-item.active {
        border-color: #007bff;
        transform: scale(1.05);
    }
    
    .thumbnail-item.main {
        border-color: #28a745;
    }
    
    .thumbnail-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    
    .main-indicator {
        position: absolute;
        top: 2px;
        left: 2px;
        background: #28a745;
        color: white;
        font-size: 0.6rem;
        padding: 2px 4px;
        border-radius: 2px;
    }
    
    .no-image-display {
        text-align: center;
        padding: 2rem;
        background: #f8f9fa;
        border-radius: 8px;
    }
    
    .no-image-placeholder {
        width: 120px;
        height: 120px;
        opacity: 0.6;
        margin-bottom: 1rem;
    }
    
    .no-image-text {
        color: #666;
        font-style: italic;
    }
    
    /* Âü∫Êú¨ÊÉÖÂ†±„Çª„ÇØ„Ç∑„Éß„É≥ */
    .product-basic-section {
        padding-left: 1rem;
    }
    
    .product-header-info {
        margin-bottom: 1.5rem;
    }
    
    .product-display-name {
        font-size: 1.75rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 0.5rem;
        line-height: 1.3;
    }
    
    .product-status-info {
        margin-bottom: 1rem;
    }
    
    .status-badge {
        display: inline-block;
        padding: 0.375rem 0.75rem;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 500;
    }
    
    .status-pending {
        background-color: #ffc107;
        color: #000;
    }
    
    .status-active {
        background-color: #28a745;
        color: white;
    }
    
    .status-discontinued {
        background-color: #6c757d;
        color: white;
    }
    
    .product-price-info {
        margin-bottom: 2rem;
    }
    
    .price-display {
        display: flex;
        align-items: baseline;
        gap: 0.25rem;
    }
    
    .price-currency {
        font-size: 1.2rem;
        font-weight: 500;
        color: #666;
    }
    
    .price-amount {
        font-size: 2.5rem;
        font-weight: 700;
        color: #333;
    }
    
    .price-note {
        font-size: 0.9rem;
        color: #666;
        margin-left: 0.5rem;
    }
    
    .product-description-section {
        margin-bottom: 2rem;
    }
    
    .description-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.75rem;
        color: #333;
    }
    
    .description-content {
        line-height: 1.6;
        color: #555;
    }
    
    .product-categories-section {
        margin-bottom: 2rem;
    }
    
    .categories-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.75rem;
        color: #333;
    }
    
    .categories-display {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }
    
    .category-tag {
        display: flex;
        align-items: center;
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 20px;
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
        gap: 0.25rem;
    }
    
    .category-icon {
        font-size: 0.9rem;
    }
    
    .category-link {
        margin-left: 0.25rem;
        color: #007bff;
        text-decoration: none;
        font-weight: 500;
    }
    
    .product-actions-section {
        margin-top: 2rem;
        padding-top: 1.5rem;
        border-top: 1px solid #dee2e6;
    }
    
    .action-buttons {
        display: flex;
        gap: 0.75rem;
        flex-wrap: wrap;
    }
    
    /* Ë©≥Á¥∞ÊÉÖÂ†±„Çª„ÇØ„Ç∑„Éß„É≥ */
    .product-detailed-info {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
    }
    
    @media (max-width: 768px) {
        .product-detailed-info {
            grid-template-columns: 1fr;
        }
    }
    
    .specifications-section,
    .management-info-section {
        background: white;
        border-radius: 8px;
        padding: 1.5rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    
    .section-title {
        font-size: 1.2rem;
        font-weight: 600;
        margin-bottom: 1rem;
        color: #333;
        border-bottom: 2px solid #007bff;
        padding-bottom: 0.5rem;
    }
    
    .specifications-grid,
    .management-grid {
        display: grid;
        gap: 0.75rem;
    }
    
    .spec-row,
    .management-row {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 1rem;
        padding: 0.75rem;
        background: #f8f9fa;
        border-radius: 4px;
    }
    
    .spec-label,
    .management-label {
        font-weight: 500;
        color: #555;
    }
    
    .spec-value,
    .management-value {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .jan-code-display {
        background: #e9ecef;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-family: monospace;
        font-size: 0.9rem;
    }
    
    .copy-button {
        background: none;
        border: none;
        cursor: pointer;
        font-size: 1rem;
        opacity: 0.7;
        transition: opacity 0.3s ease;
    }
    
    .copy-button:hover {
        opacity: 1;
    }
    
    .time-diff {
        color: #6c757d;
        font-style: italic;
    }
    
    /* ÁîªÂÉè„Éì„É•„Éº„Ç¢„Éº„É¢„Éº„ÉÄ„É´ */
    .image-viewer-modal .modal-body {
        padding: 0;
    }
    
    .image-viewer-container {
        text-align: center;
        background: #000;
    }
    
    .viewer-image {
        max-width: 100%;
        max-height: 80vh;
    }
</style>